/**
 * PharmaTrace Supply Chain Information Network API
 * The PharmaTrace SCIN API provides network members a resource and process oriented access to the blockchain backed market and inventory information. It represents a layer of abstraction above the Hyperledger network to facilitate a business focused development of clients and integration systems without the need to directly connect to Hyperledger nodes.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: api@pharmatrace.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.pharmatrace.api.scin.public.model;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Location {
  
  @SerializedName("timestamp")
  private Long timestamp = null;
  @SerializedName("uuid")
  private String uuid = null;
  @SerializedName("longitude")
  private BigDecimal longitude = null;
  @SerializedName("latitude")
  private BigDecimal latitude = null;
  @SerializedName("location_type")
  private String locationType = null;

  /**
   * GMT, C time format.
   **/
  @ApiModelProperty(value = "GMT, C time format.")
  public Long getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(Long timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * Unique identifier for the location.
   **/
  @ApiModelProperty(value = "Unique identifier for the location.")
  public String getUuid() {
    return uuid;
  }
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  /**
   * longitude.
   **/
  @ApiModelProperty(value = "longitude.")
  public BigDecimal getLongitude() {
    return longitude;
  }
  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }

  /**
   * latitude.
   **/
  @ApiModelProperty(value = "latitude.")
  public BigDecimal getLatitude() {
    return latitude;
  }
  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }

  /**
   * type of container location, e.g. VESSEL, AIR, STREET, WAREHOUSE, PROCESSING, STORE, WITH_PATIENT, ...
   **/
  @ApiModelProperty(value = "type of container location, e.g. VESSEL, AIR, STREET, WAREHOUSE, PROCESSING, STORE, WITH_PATIENT, ...")
  public String getLocationType() {
    return locationType;
  }
  public void setLocationType(String locationType) {
    this.locationType = locationType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Location location = (Location) o;
    return (this.timestamp == null ? location.timestamp == null : this.timestamp.equals(location.timestamp)) &&
        (this.uuid == null ? location.uuid == null : this.uuid.equals(location.uuid)) &&
        (this.longitude == null ? location.longitude == null : this.longitude.equals(location.longitude)) &&
        (this.latitude == null ? location.latitude == null : this.latitude.equals(location.latitude)) &&
        (this.locationType == null ? location.locationType == null : this.locationType.equals(location.locationType));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    result = 31 * result + (this.uuid == null ? 0: this.uuid.hashCode());
    result = 31 * result + (this.longitude == null ? 0: this.longitude.hashCode());
    result = 31 * result + (this.latitude == null ? 0: this.latitude.hashCode());
    result = 31 * result + (this.locationType == null ? 0: this.locationType.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Location {\n");
    
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("  uuid: ").append(uuid).append("\n");
    sb.append("  longitude: ").append(longitude).append("\n");
    sb.append("  latitude: ").append(latitude).append("\n");
    sb.append("  locationType: ").append(locationType).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
