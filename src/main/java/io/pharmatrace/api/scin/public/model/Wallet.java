/**
 * PharmaTrace Supply Chain Information Network API
 * The PharmaTrace SCIN API provides network members a resource and process oriented access to the blockchain backed market and inventory information. It represents a layer of abstraction above the Hyperledger network to facilitate a business focused development of clients and integration systems without the need to directly connect to Hyperledger nodes.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: api@pharmatrace.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.pharmatrace.api.scin.public.model;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Wallet {
  
  @SerializedName("balance")
  private BigDecimal balance = null;
  @SerializedName("wallet_id")
  private String walletId = null;
  @SerializedName("display_name")
  private String displayName = null;
  @SerializedName("owner_stakeholder_id")
  private String ownerStakeholderId = null;

  /**
   * current balance
   **/
  @ApiModelProperty(value = "current balance")
  public BigDecimal getBalance() {
    return balance;
  }
  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }

  /**
   * wallet uuid
   **/
  @ApiModelProperty(value = "wallet uuid")
  public String getWalletId() {
    return walletId;
  }
  public void setWalletId(String walletId) {
    this.walletId = walletId;
  }

  /**
   * descriptive name of the wallet so user can identify it if s/he has multiple wallets
   **/
  @ApiModelProperty(value = "descriptive name of the wallet so user can identify it if s/he has multiple wallets")
  public String getDisplayName() {
    return displayName;
  }
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  /**
   * id of the wallet owner (normally an organization
   **/
  @ApiModelProperty(value = "id of the wallet owner (normally an organization")
  public String getOwnerStakeholderId() {
    return ownerStakeholderId;
  }
  public void setOwnerStakeholderId(String ownerStakeholderId) {
    this.ownerStakeholderId = ownerStakeholderId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wallet wallet = (Wallet) o;
    return (this.balance == null ? wallet.balance == null : this.balance.equals(wallet.balance)) &&
        (this.walletId == null ? wallet.walletId == null : this.walletId.equals(wallet.walletId)) &&
        (this.displayName == null ? wallet.displayName == null : this.displayName.equals(wallet.displayName)) &&
        (this.ownerStakeholderId == null ? wallet.ownerStakeholderId == null : this.ownerStakeholderId.equals(wallet.ownerStakeholderId));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.balance == null ? 0: this.balance.hashCode());
    result = 31 * result + (this.walletId == null ? 0: this.walletId.hashCode());
    result = 31 * result + (this.displayName == null ? 0: this.displayName.hashCode());
    result = 31 * result + (this.ownerStakeholderId == null ? 0: this.ownerStakeholderId.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wallet {\n");
    
    sb.append("  balance: ").append(balance).append("\n");
    sb.append("  walletId: ").append(walletId).append("\n");
    sb.append("  displayName: ").append(displayName).append("\n");
    sb.append("  ownerStakeholderId: ").append(ownerStakeholderId).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
