/**
 * PharmaTrace Supply Chain Information Network API
 * The PharmaTrace SCIN API provides network members a resource and process oriented access to the blockchain backed market and inventory information. It represents a layer of abstraction above the Hyperledger network to facilitate a business focused development of clients and integration systems without the need to directly connect to Hyperledger nodes.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: api@pharmatrace.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class LegalTxTerms {
  
  @SerializedName("timestamp_valid_from")
  private Long timestampValidFrom = null;
  @SerializedName("timestamp_valid_until")
  private Long timestampValidUntil = null;
  @SerializedName("validity_tolerance")
  private Long validityTolerance = null;
  @SerializedName("terms_id")
  private String termsId = null;
  @SerializedName("terms_version")
  private String termsVersion = null;
  @SerializedName("terms_id_previous_version")
  private String termsIdPreviousVersion = null;
  @SerializedName("terms_text")
  private String termsText = null;
  @SerializedName("language")
  private String language = null;
  @SerializedName("legislation")
  private String legislation = null;

  /**
   * GMT, Unix Epoch
   **/
  @ApiModelProperty(value = "GMT, Unix Epoch")
  public Long getTimestampValidFrom() {
    return timestampValidFrom;
  }
  public void setTimestampValidFrom(Long timestampValidFrom) {
    this.timestampValidFrom = timestampValidFrom;
  }

  /**
   * GMT, Unix Epoch
   **/
  @ApiModelProperty(value = "GMT, Unix Epoch")
  public Long getTimestampValidUntil() {
    return timestampValidUntil;
  }
  public void setTimestampValidUntil(Long timestampValidUntil) {
    this.timestampValidUntil = timestampValidUntil;
  }

  /**
   * tolerance window for transactions that begin but do not finish under the governance of these terms (in ms)
   **/
  @ApiModelProperty(value = "tolerance window for transactions that begin but do not finish under the governance of these terms (in ms)")
  public Long getValidityTolerance() {
    return validityTolerance;
  }
  public void setValidityTolerance(Long validityTolerance) {
    this.validityTolerance = validityTolerance;
  }

  /**
   * unique id hash of the transaction terms and conditions
   **/
  @ApiModelProperty(value = "unique id hash of the transaction terms and conditions")
  public String getTermsId() {
    return termsId;
  }
  public void setTermsId(String termsId) {
    this.termsId = termsId;
  }

  /**
   * optional version mark of the terms
   **/
  @ApiModelProperty(value = "optional version mark of the terms")
  public String getTermsVersion() {
    return termsVersion;
  }
  public void setTermsVersion(String termsVersion) {
    this.termsVersion = termsVersion;
  }

  /**
   * optional link to the previous version of these terms
   **/
  @ApiModelProperty(value = "optional link to the previous version of these terms")
  public String getTermsIdPreviousVersion() {
    return termsIdPreviousVersion;
  }
  public void setTermsIdPreviousVersion(String termsIdPreviousVersion) {
    this.termsIdPreviousVersion = termsIdPreviousVersion;
  }

  /**
   * text of the terms and conditions
   **/
  @ApiModelProperty(value = "text of the terms and conditions")
  public String getTermsText() {
    return termsText;
  }
  public void setTermsText(String termsText) {
    this.termsText = termsText;
  }

  /**
   * ISO language code, e.g. en_us
   **/
  @ApiModelProperty(value = "ISO language code, e.g. en_us")
  public String getLanguage() {
    return language;
  }
  public void setLanguage(String language) {
    this.language = language;
  }

  /**
   * legislation enforcing these terms
   **/
  @ApiModelProperty(value = "legislation enforcing these terms")
  public String getLegislation() {
    return legislation;
  }
  public void setLegislation(String legislation) {
    this.legislation = legislation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LegalTxTerms legalTxTerms = (LegalTxTerms) o;
    return (this.timestampValidFrom == null ? legalTxTerms.timestampValidFrom == null : this.timestampValidFrom.equals(legalTxTerms.timestampValidFrom)) &&
        (this.timestampValidUntil == null ? legalTxTerms.timestampValidUntil == null : this.timestampValidUntil.equals(legalTxTerms.timestampValidUntil)) &&
        (this.validityTolerance == null ? legalTxTerms.validityTolerance == null : this.validityTolerance.equals(legalTxTerms.validityTolerance)) &&
        (this.termsId == null ? legalTxTerms.termsId == null : this.termsId.equals(legalTxTerms.termsId)) &&
        (this.termsVersion == null ? legalTxTerms.termsVersion == null : this.termsVersion.equals(legalTxTerms.termsVersion)) &&
        (this.termsIdPreviousVersion == null ? legalTxTerms.termsIdPreviousVersion == null : this.termsIdPreviousVersion.equals(legalTxTerms.termsIdPreviousVersion)) &&
        (this.termsText == null ? legalTxTerms.termsText == null : this.termsText.equals(legalTxTerms.termsText)) &&
        (this.language == null ? legalTxTerms.language == null : this.language.equals(legalTxTerms.language)) &&
        (this.legislation == null ? legalTxTerms.legislation == null : this.legislation.equals(legalTxTerms.legislation));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.timestampValidFrom == null ? 0: this.timestampValidFrom.hashCode());
    result = 31 * result + (this.timestampValidUntil == null ? 0: this.timestampValidUntil.hashCode());
    result = 31 * result + (this.validityTolerance == null ? 0: this.validityTolerance.hashCode());
    result = 31 * result + (this.termsId == null ? 0: this.termsId.hashCode());
    result = 31 * result + (this.termsVersion == null ? 0: this.termsVersion.hashCode());
    result = 31 * result + (this.termsIdPreviousVersion == null ? 0: this.termsIdPreviousVersion.hashCode());
    result = 31 * result + (this.termsText == null ? 0: this.termsText.hashCode());
    result = 31 * result + (this.language == null ? 0: this.language.hashCode());
    result = 31 * result + (this.legislation == null ? 0: this.legislation.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class LegalTxTerms {\n");
    
    sb.append("  timestampValidFrom: ").append(timestampValidFrom).append("\n");
    sb.append("  timestampValidUntil: ").append(timestampValidUntil).append("\n");
    sb.append("  validityTolerance: ").append(validityTolerance).append("\n");
    sb.append("  termsId: ").append(termsId).append("\n");
    sb.append("  termsVersion: ").append(termsVersion).append("\n");
    sb.append("  termsIdPreviousVersion: ").append(termsIdPreviousVersion).append("\n");
    sb.append("  termsText: ").append(termsText).append("\n");
    sb.append("  language: ").append(language).append("\n");
    sb.append("  legislation: ").append(legislation).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
